# Generated by Django 5.2.5 on 2025-09-27 03:26

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('orders', '0010_alter_order_status'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(help_text='Contact phone number for ride coordination', max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('license_number', models.CharField(help_text="Driver's license number (must be unique)", max_length=20, unique=True, validators=[django.core.validators.RegexValidator(message='License number must be 5-20 characters, uppercase letters and numbers only.', regex='^[A-Z0-9]{5,20}$')])),
                ('license_expiry', models.DateField(help_text="Driver's license expiration date")),
                ('vehicle_make', models.CharField(help_text='Vehicle manufacturer (e.g., Toyota, Honda)', max_length=50)),
                ('vehicle_model', models.CharField(help_text='Vehicle model (e.g., Camry, Civic)', max_length=50)),
                ('vehicle_year', models.PositiveIntegerField(help_text='Vehicle manufacturing year', validators=[django.core.validators.MinValueValidator(1980, message='Vehicle year must be 1980 or later'), django.core.validators.MaxValueValidator(2030, message='Vehicle year cannot be in the future')])),
                ('vehicle_color', models.CharField(help_text='Vehicle color for rider identification', max_length=30)),
                ('vehicle_type', models.CharField(choices=[('sedan', 'Sedan'), ('suv', 'SUV'), ('hatchback', 'Hatchback'), ('motorcycle', 'Motorcycle'), ('van', 'Van')], default='sedan', help_text='Type of vehicle for ride matching', max_length=15)),
                ('license_plate', models.CharField(help_text='Vehicle license plate number (must be unique)', max_length=10, unique=True, validators=[django.core.validators.RegexValidator(message='License plate must be 2-10 characters, uppercase letters and numbers only.', regex='^[A-Z0-9]{2,10}$')])),
                ('current_latitude', models.DecimalField(blank=True, decimal_places=7, help_text='Current latitude for ride matching', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(-90.0, message='Latitude must be between -90 and 90 degrees'), django.core.validators.MaxValueValidator(90.0, message='Latitude must be between -90 and 90 degrees')])),
                ('current_longitude', models.DecimalField(blank=True, decimal_places=7, help_text='Current longitude for ride matching', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(-180.0, message='Longitude must be between -180 and 180 degrees'), django.core.validators.MaxValueValidator(180.0, message='Longitude must be between -180 and 180 degrees')])),
                ('availability_status', models.CharField(choices=[('offline', 'Offline'), ('available', 'Available'), ('busy', 'Busy'), ('on_trip', 'On Trip')], default='offline', help_text='Current availability for accepting rides', max_length=15)),
                ('last_location_update', models.DateTimeField(blank=True, help_text='Timestamp of last location update', null=True)),
                ('profile_photo', models.ImageField(blank=True, help_text='Profile photo for rider identification', null=True, upload_to='driver_profiles/')),
                ('average_rating', models.DecimalField(decimal_places=2, default=5.0, help_text='Average rating from riders (0.00 to 5.00)', max_digits=3, validators=[django.core.validators.MinValueValidator(0.0, message='Rating cannot be negative'), django.core.validators.MaxValueValidator(5.0, message='Rating cannot exceed 5.00')])),
                ('total_rides', models.PositiveIntegerField(default=0, help_text='Total number of completed rides')),
                ('is_active', models.BooleanField(default=True, help_text='Whether the driver account is active')),
                ('is_verified', models.BooleanField(default=False, help_text='Whether driver documents have been verified')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(help_text='Associated Django User account for authentication', on_delete=django.db.models.deletion.CASCADE, related_name='driver_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Driver',
                'verbose_name_plural': 'Drivers',
                'indexes': [models.Index(fields=['phone'], name='orders_driv_phone_845bba_idx'), models.Index(fields=['license_number'], name='orders_driv_license_d16ff4_idx'), models.Index(fields=['license_plate'], name='orders_driv_license_0133e5_idx'), models.Index(fields=['availability_status'], name='orders_driv_availab_8b4fb1_idx'), models.Index(fields=['is_active', 'is_verified'], name='orders_driv_is_acti_0bd35d_idx'), models.Index(fields=['current_latitude', 'current_longitude'], name='orders_driv_current_f4839c_idx'), models.Index(fields=['created_at'], name='orders_driv_created_5882f5_idx')],
            },
        ),
        migrations.CreateModel(
            name='Rider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(help_text='Contact phone number for ride notifications', max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('preferred_payment', models.CharField(choices=[('cash', 'Cash'), ('card', 'Credit/Debit Card'), ('wallet', 'Digital Wallet'), ('paypal', 'PayPal')], default='card', help_text='Default payment method for rides', max_length=10)),
                ('default_pickup_address', models.CharField(blank=True, help_text='Most frequently used pickup location', max_length=255)),
                ('default_pickup_latitude', models.DecimalField(blank=True, decimal_places=7, help_text='Latitude coordinate for default pickup location', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(-90.0, message='Latitude must be between -90 and 90 degrees'), django.core.validators.MaxValueValidator(90.0, message='Latitude must be between -90 and 90 degrees')])),
                ('default_pickup_longitude', models.DecimalField(blank=True, decimal_places=7, help_text='Longitude coordinate for default pickup location', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(-180.0, message='Longitude must be between -180 and 180 degrees'), django.core.validators.MaxValueValidator(180.0, message='Longitude must be between -180 and 180 degrees')])),
                ('profile_photo', models.ImageField(blank=True, help_text='Profile photo for driver identification', null=True, upload_to='rider_profiles/')),
                ('average_rating', models.DecimalField(decimal_places=2, default=5.0, help_text='Average rating from drivers (0.00 to 5.00)', max_digits=3, validators=[django.core.validators.MinValueValidator(0.0, message='Rating cannot be negative'), django.core.validators.MaxValueValidator(5.0, message='Rating cannot exceed 5.00')])),
                ('total_rides', models.PositiveIntegerField(default=0, help_text='Total number of completed rides')),
                ('is_active', models.BooleanField(default=True, help_text='Whether the rider account is active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(help_text='Associated Django User account for authentication', on_delete=django.db.models.deletion.CASCADE, related_name='rider_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Rider',
                'verbose_name_plural': 'Riders',
                'indexes': [models.Index(fields=['phone'], name='orders_ride_phone_4169fb_idx'), models.Index(fields=['is_active'], name='orders_ride_is_acti_31563b_idx'), models.Index(fields=['created_at'], name='orders_ride_created_bf23a7_idx')],
            },
        ),
    ]
